#!/bin/bash

RUBYGEMS_BRANCH="master"
BUNDLER_BRANCH="master"
DIR=$(pwd)

while [[ $# -gt 1 ]]
do
  key="$1"

  case $key in
    -r|--ruby-gems)
RUBYGEMS_BRANCH="$2"
shift # past argument
;;
-b|--bundler)
BUNDLER_BRANCH="$2"
shift # past argument
;;
*)
        # unknown option
        ;;
      esac
shift # past argument or value
done

[ -f /opt/dev/dev.sh ] && source /opt/dev/dev.sh

c_tl=┏
c_bl=┗
#c_br=┛
#c_tr=┓
horz=━
vert=┃

print_header() {
  local width diff s
  width="$(tput cols)"
  ((diff = width - 1))
  s="$(printf "%-${diff}s" "${horz}")"
  s="${s// /${horz}}"

  echo -e "\x1b[36m${c_tl}${s}\x1b[0m"
}

print_footer() {
  local width diff s
  width="$(tput cols)"
  ((diff = width - 1))
  s="$(printf "%-${diff}s" "${horz}")"
  s="${s// /${horz}}"

  echo -e "\x1b[36m${c_bl}${s}\x1b[0m"
}

header() {
  echo -e "\x1b[36m${vert} $1\x1b[0m"
}

rubygems() {
  print_header
  header "Setting up Rubygems with branch $RUBYGEMS_BRANCH"

  dev cd rubygems/rubygems
  git submodule update >/dev/null
  ruby $DIR/checkout $RUBYGEMS_BRANCH rubygems
  echo "Need sudo to setup Rubygems"
  sudo ruby setup.rb >/dev/null

  print_footer
}

bundler() {
  print_header
  header "Setting up Bundler with branch $BUNDLER_BRANCH"

  dev cd bundler/bundler
  ruby $DIR/checkout $BUNDLER_BRANCH bundler
  export RUBYOPT='-I/Users/juliannadeau/src/github.com/bundler/bundler/lib'

  print_footer
}

shopify() {
  print_header
  header "Setting up Shopify"

  dev cd shopify
  dev up

  if grep -q "_ta('setup')" config/boot.rb; then
    echo 'Already timing'
  else
    perl -pi -e "s/require 'bundler\/setup'/\_ta('setup') { require 'bundler\/setup' }/g" config/boot.rb
  fi

  print_footer
}

test_it() {
  print_header
  header "Running tests"

  export BOOT_TIMING_HELPERS=1
  bin/rake environment

  print_footer
}

rubygems
bundler
shopify
test_it
